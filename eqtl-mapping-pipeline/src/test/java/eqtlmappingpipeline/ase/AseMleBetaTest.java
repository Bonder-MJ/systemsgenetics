/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package eqtlmappingpipeline.ase;

import cern.colt.list.tint.IntArrayList;
import java.util.Random;
import static org.testng.Assert.*;
import org.testng.annotations.Test;

/**
 *
 * @author Patrick Deelen
 */
public class AseMleBetaTest {

	public AseMleBetaTest() {
	}

	
	public void test() {

		int[] x = {16, 25, 11, 17, 13, 36, 12, 25, 12, 6, 9, 33, 6, 22, 9, 35, 16, 13, 3, 28, 8, 48, 12, 11, 12, 26, 44, 28, 25, 2, 20, 38, 21, 26, 11, 26, 11, 36, 25, 34, 6, 8, 32, 21, 7, 45, 9, 34, 16, 43, 32, 34, 30, 8, 2, 50, 6, 20, 37, 43, 48, 4, 22, 41, 32, 31, 1, 26, 1, 11, 41, 23, 32, 19, 22, 16, 11, 16, 21, 15, 28, 9, 31, 13, 33, 31, 25, 11, 18, 17, 23, 37, 22, 18, 45, 24, 9, 35, 44, 35};

		final IntArrayList a1Counts = new IntArrayList();
		final IntArrayList a2Counts = new IntArrayList();

		for (int a : x) {
			a1Counts.add(a);
			a2Counts.add(50 - a);
		}

		AseMle mle = new AseMle(a1Counts, a2Counts);


		System.out.println(mle.getRatioP());
		System.out.println(mle.getMaxLikelihoodP());
		System.out.println(mle.getMaxLikelihood());
		System.out.println(mle.getRatioD());

		System.out.println("---");
		AseMleBeta mleBeta = new AseMleBeta(a1Counts, a2Counts);

		System.out.println(mleBeta.getRatioP());
		System.out.println(mleBeta.getMaxLikelihoodP());
		System.out.println(mleBeta.getMaxLikelihood());
		System.out.println(mleBeta.getRatioD());
		System.out.println(mleBeta.getMaxLogLikelihoodTheta());

	}

	
	public void test2() {

		int[] x = {130, 170};

		final IntArrayList a1Counts = new IntArrayList();
		final IntArrayList a2Counts = new IntArrayList();

		for (int a : x) {
			a1Counts.add(a);
			a2Counts.add(1000 - a);
		}

		System.out.println("---");
		AseMleBeta mleBeta = new AseMleBeta(a1Counts, a2Counts);

		System.out.println("p-value: " + mleBeta.getRatioP());
		System.out.println("p: " + mleBeta.getMaxLikelihoodP());
		System.out.println("max l: " + mleBeta.getMaxLikelihood());
		System.out.println("ratio D: " + mleBeta.getRatioD());
		System.out.println("theta: " + mleBeta.getMaxLogLikelihoodTheta());

	}
	
	
	public void test3() {
		
		int[] a1 = {236,37,23,53,108,16,107,15,227,46,167,28,653,13,378,552,893,498,310,412,370,460,15,475,253,265,188,600,12,82,103,67,736,287,829,166,10,218,86,253,326,398,208,257,169,941,224,748,289,217,412,340,498,303,153,35,449,755,104,1818,396,509,105,235,219,311,510,126,902,906,502,379,1173,127,415,849,56,138,424,223,45,543,358,661,536,166,277,105,142,1113,294,239,189,428,43,224,262,165,131,155,117,121,909,1055,594,226,35,528,477,485,798,433,939,485,185,899,306,161,356,158,335,142,363,68,490,908,122,87,206,989,284,1132,865,945,464,151,730,252,187,148,300,664,163,293,307,385,491,175,439,202,787,273,262,488,386,271,390,648,173,376,1048,1332,137,60,125,184,211,2757,892,741,1705,144,406,173,142,168,192,235,559,109,392,687,987,321,79,470,193,604,602,508,41,168,575,352,366,85,548,418,503,535,389,1524,395,418,710,737,188,768,258,204,316,251,479,196,165,50,175,542,649,114,555,467,289,152,269,812,256,203,501,345,420,566,259,154,800,615,937,207,1155,1603,95,76,363,156,186,673,132,208,769,355,791,571,419,861,506,301,105,268,334,244,317,1086,386,311,461,1994,555,272,274,840,224,169,232,513,1724,142,271,304,35,474,566,266,403,83,138,404,345,787,977,100,450,133,308,1395,1312,1160,325,265,27,492,593,233,118,522,121,87,174,444,596,484,96,232,1190,118,735,108,61,74,572,722,134,94,364,331,611,229,319,511,100,896,1352,228,611,223,388,794,119,164,238,816,363,236,169,98,779,1007,382,341,209,490,343,221,660,211,563,900,179,674,416,131,111,135,424,301,353,225,110,886,178,385,81,96,717,392,1559,202,323,1700,74,108,172,934,96,66,734,520,91,612,118,22,16,42,160,62,427,65,57,14,51,49,30,48,271,34,97,60,26,146,61,287,35,139,29,70,31,29,11,21,67,152,30,31,39,22,68,202,22,173,174,72,56,57,120,76,65,34,109,42,165,41,97,94,15,12,69,196,167,51,45,165,68,18,38,44,144,52,24,81,122,138,65,121,49,108,43,243,22,85,13,186,160,72,15,98,35,503,1717,396,186,886,41,115,969,207,15,53,18,13,23,19,51,23,303,252,353,34,159,46,19,52,11,54,21,884,89,261,550,16,22,78,40,229,12,116,207,43,23,53,181,35,683,69,3390,251,753,90,18,816,43,127,102,96,555,17,91,250,25,133,103,108,212,17,645,83,244,99,40,220,66,29,65,100,183,354,656,98,38,484,220,217,69,78,305,1606,425,316,885,913,644,54,432,278,149,1078,16,48,380,95,91,37,413,70,228,102,270,77,101,105,1423,417,14,144,188,21,13,58,43,795,67,829,14,21,144,12,11,32,20,126,319,37,17,130,187,13,320,38,19,60,148,13,19,57,23,22,422,27,30,42,14,760,166,101,18,32,20,387,475,340,54,202,1243,14,716,108,2433,63,54,27,178,51,20,125,71,80,146,1241,877,157,209,593,51,1215,113,485,37,89,291,1333,189,103,744,150,69,62,237,144,6526,22,1749,14,22,494,1974,604,517,21,694,20,21,503,387,140,172,965,14,82,50,47,830,33,110,30,14,158,47,2846,34,1836,33,40,27,109,27,20,38,21,28,32,17,187,276,111,37,39,329,35,62,12,15,39,20,66,241,47,67,153,41,279,70,109,111,31,61,16,60,123,191,112,12};
		
		int[] a2 = {3145,192,40,713,1353,33,107,39,1081,64,3584,22,1284,15,880,1305,2756,1072,349,930,2083,1438,14,2300,1402,983,1490,2220,31,1042,71,125,3071,432,2401,206,153,2398,1007,3257,1869,2217,741,842,1175,2497,3722,2229,652,463,1310,663,330,2233,242,67,1639,2308,141,2248,938,1134,44,1478,956,1135,2468,1085,1075,3433,1085,2400,3943,2250,910,2965,1729,1658,264,1450,31,924,1925,1643,1808,56,1837,473,51,1926,1970,1250,977,1957,12,1572,1051,760,1971,48,687,1683,3768,1308,996,994,1085,1252,809,437,1802,2442,3223,885,852,1550,3673,214,2470,2055,400,1970,3531,567,1494,1960,1435,738,631,3528,4256,3349,1435,1548,1043,831,3187,2100,618,248,629,2654,1529,2226,1023,281,3275,686,1007,1286,2084,1251,2234,1129,1059,767,2823,2121,107,2196,2478,2625,462,43,121,382,2308,5981,2632,2290,1892,545,1361,1755,751,1806,2144,1867,2771,1410,1007,1797,1501,1459,2748,685,1928,1625,2195,3466,53,690,2224,1101,972,2259,494,1001,1140,2147,916,3631,1218,2427,3278,526,161,1485,1175,186,814,1128,2113,759,1015,798,2201,1845,1551,868,1759,968,2630,848,2194,1322,1300,770,1321,1131,2969,1712,786,1401,3126,846,1376,144,2683,2103,146,659,793,722,2772,2765,1654,480,2476,1765,3282,1269,1648,3667,2214,2371,1986,998,710,574,2297,2808,838,762,1462,2280,2338,876,965,1611,1040,2151,628,1221,3760,1694,318,864,20,1515,1289,4597,3313,1221,1557,459,970,2272,931,1767,1180,1426,3289,2867,2683,3049,2923,267,349,355,2156,246,1054,2582,1190,1640,571,2983,407,4574,1043,1331,2773,876,1241,2518,754,79,1743,1841,1157,86,3320,1522,1590,2158,1888,3051,914,738,3466,145,1490,2763,1170,2114,90,2044,1024,684,344,101,52,2115,1073,2922,2841,2446,2606,2035,637,1690,3123,1013,1640,1368,981,2916,186,1071,1998,1324,2374,443,1848,1693,2391,1521,385,1058,1311,2750,3169,1113,2502,1177,2203,3861,937,4290,2573,2558,67,71,782,1052,1708,2957,881,181,100,274,2022,72,2766,178,464,50,240,134,44,292,5453,205,619,845,93,739,127,249,27,284,13,310,143,232,56,93,104,321,70,292,129,57,525,1878,37,95,980,1410,399,655,576,533,226,238,115,422,663,94,192,232,136,165,252,2396,211,456,171,1719,561,66,41,254,1133,1089,646,193,1378,206,69,128,147,342,193,408,315,167,104,144,867,960,288,415,84,2390,7849,4401,219,26317,172,248,1352,614,65,163,66,44,456,68,603,122,935,4022,794,518,1194,773,51,318,437,994,167,1794,646,1067,2543,492,64,1040,116,193,581,470,745,193,284,437,338,118,497,1542,6867,860,2181,677,356,1726,128,231,731,491,720,328,631,571,571,1207,972,90,823,102,725,141,1117,999,170,698,963,317,864,82,1009,1450,348,545,316,578,2191,699,998,1291,3079,1770,1779,382,1518,2876,580,1117,208,2225,819,3436,69,606,5048,1414,1261,1067,1143,242,292,566,3060,108,730,327,5184,750,349,811,1802,17,360,95,475,4196,130,3545,214,225,679,228,123,151,162,349,1605,253,102,2651,596,37,2556,129,44,752,431,202,32,115,227,48,327,112,201,406,136,799,883,120,20,150,21,650,182,738,179,475,1011,310,1715,98,2111,162,93,74,880,674,599,2406,570,2515,286,706,1596,363,896,3167,323,7372,386,3693,755,254,5102,7939,845,557,854,1159,601,122,319,199,11693,366,9363,488,178,1554,6413,1404,3792,846,1251,160,316,4828,1508,827,2962,3976,119,3235,598,1330,3098,1326,1425,531,205,5226,531,12097,561,5596,452,1041,1113,572,1274,666,862,448,703,817,522,4748,1888,1144,1283,882,788,666,2030,484,156,406,256,1840,1142,398,1565,983,880,965,1574,788,167,720,157,74,489,1066,1127,313,466};

		final IntArrayList a1Counts = new IntArrayList(a1);
		final IntArrayList a2Counts = new IntArrayList(a2);

		System.out.println("---");
		AseMleBeta mleBeta = new AseMleBeta(a1Counts, a2Counts);

		System.out.println("p-value: " + mleBeta.getRatioP());
		System.out.println("p: " + mleBeta.getMaxLikelihoodP());
		System.out.println("max l: " + mleBeta.getMaxLikelihood());
		System.out.println("ratio D: " + mleBeta.getRatioD());
		System.out.println("theta: " + mleBeta.getMaxLogLikelihoodTheta());

	}
	
}